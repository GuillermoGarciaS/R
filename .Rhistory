library(readx1)
install.packages("readx1")
# Install necessary packages (run only if not already installed)
install.packages("readxl")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("viridis")
# Load necessary libraries
library(readxl)
library(dplyr)
library(ggplot2)
library(viridis)
# List all CSV files in the directory
file_paths <- list.files("C:/Users/eiven/Documents/Data/adhd1", pattern = ".csv", full.names = TRUE)
# Function to read and label data
read_and_label <- function(file) {
df <- read.csv(file)  # Use read.csv for CSV files
state_name <- tools::file_path_sans_ext(basename(file))
df$State <- state_name
return(df)
}
# Read and label all data
data_list <- lapply(file_paths, read_and_label)
# Combine all data into one dataframe
combined_data <- bind_rows(data_list)
# Summarize the data
summary_data <- combined_data %>%
group_by(State, `Prevalence Year`) %>%
summarise(Total_Cases = sum(`Prevalence Percentage`, na.rm = TRUE))
rlang::last_trace()
# Install necessary packages (run only if not already installed)
install.packages("readxl")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("viridis")
# Load necessary libraries
library(readxl)
library(dplyr)
library(ggplot2)
library(viridis)
# List all CSV files in the directory
file_paths <- list.files("C:/Users/eiven/Documents/Data/adhd1", pattern = ".csv", full.names = TRUE)
# Function to read and label data
read_and_label <- function(file) {
df <- read.csv(file)  # Use read.csv for CSV files
state_name <- tools::file_path_sans_ext(basename(file))
df$State <- state_name
return(df)
}
# Read and label all data
data_list <- lapply(file_paths, read_and_label)
# Combine all data into one dataframe
combined_data <- bind_rows(data_list)
# Print the column names to verify them
print(colnames(combined_data))
# Check and clean 'Prevalence Year' column
combined_data <- combined_data %>%
mutate(`Prevalence Year` = as.character(`Prevalence Year`)) %>%  # Ensure it's character
separate_rows(`Prevalence Year`, sep = "-") %>%  # Separate year ranges
mutate(`Prevalence Year` = as.numeric(`Prevalence Year`))  # Convert to numeric
